# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Attachment {
  cloudId: String!
  createdAt: DateTime!
  id: Float!
  type: String!
  uid: String!
  updatedAt: DateTime!
  url: String!
}

type Category {
  attatchments: [Attachment!]
  children: [Category!]
  createdAt: DateTime!
  id: Float!
  name: String!
  parent: Category
  references: [Reference!]
  slug: String!
  uid: String!
  updatedAt: DateTime!
}

input ChangeUserEmailInput {
  authUid: String!
  email: String!
}

input ChangeUserPasswordInput {
  authUid: String!
  newPassword: String!
  oldPassword: String!
}

input ChangeUserPhoneNumberInput {
  authUid: String!
  phoneNumber: String!
}

input CreateCategoryInput {
  name: String!
  parentUid: String
}

input CreateReferenceInput {
  categoryUid: String!
  description: String
  name: String!
  sku: String!
}

input CreateUserFromAuthUidInput {
  authUid: String!
  email: String!
  fullName: String
  phoneNumber: String
}

input CreateUserInput {
  email: String!
  fullName: String
  password: String!
  phoneNumber: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GetAllCategoriesInput {
  limit: Int
  onlyRoots: Boolean
  q: String
  skip: Int
}

input GetAllReferencesInput {
  limit: Int
  q: String
  skip: Int
}

input GetOneCategoryInput {
  uid: String!
}

input GetOneReferenceInput {
  uid: String!
}

input GetOneUserInput {
  authUid: String!
}

type Mutation {
  changeUserEmail(changeUserEmailInput: ChangeUserEmailInput!): User!
  changeUserPassword(changeUserPasswordInput: ChangeUserPasswordInput!): User!
  changeUserPhoneNumber(changeUserPhoneNumberInput: ChangeUserPhoneNumberInput!): User!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  createReference(createReferenceInput: CreateReferenceInput!): Reference!
  createUser(createUserInput: CreateUserInput!): User!
  createUserFromAuthUid(createUserFromAuthUidInput: CreateUserFromAuthUidInput!): User!
  deleteCategory(getOneCategoryInput: GetOneCategoryInput!): Category!
  deleteCategoryImage(getOneCategoryInput: GetOneCategoryInput!): Category!
  deleteReference(getOneReferenceInput: GetOneReferenceInput!): Reference!
  sendUserResetPasswordEmail(sendUserResetPasswordEmail: SendUserResetPasswordEmail!): VoidOutput!
  updateCategory(getOneCategoryInput: GetOneCategoryInput!, updateCategoryInput: UpdateCategoryInput!): Category!
  updateReference(getOneReferenceInput: GetOneReferenceInput!, updateReferenceInput: UpdateReferenceInput!): Reference!
  uploadCategoryImage(file: Upload!, uploadCategoryImageInput: UploadCategoryImageInput!): Category!
}

type Query {
  getAllCategories(getAllCategoriesInput: GetAllCategoriesInput!): [Category!]!
  getAllReferences(getAllReferencesInput: GetAllReferencesInput!): [Reference!]!
  getCategory(getOneCategoryInput: GetOneCategoryInput!): Category
  getReference(getOneReferenceInput: GetOneReferenceInput!): Reference
  getUser(getOneUserInput: GetOneUserInput!): User!
}

type Reference {
  category: Category!
  createdAt: DateTime!
  description: String
  id: Float!
  name: String!
  sku: String!
  uid: String!
  updatedAt: DateTime!
}

input SendUserResetPasswordEmail {
  email: String!
}

input UpdateCategoryInput {
  name: String
  parentUid: String
}

input UpdateReferenceInput {
  categoryUid: String
  description: String
  name: String
  sku: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UploadCategoryImageInput {
  main: Boolean
  uid: String!
  version: String
}

type User {
  authUid: String!
  createdAt: DateTime!
  email: String!
  fullName: String
  id: Float!
  phoneNumber: String
  uid: String!
  updatedAt: DateTime!
}

type VoidOutput {
  message: String!
}
