// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the `User` table in the database

model User {
  id          Int     @id @default(autoincrement())
  uid         String  @unique @default(cuid())
  email       String  @unique @db.VarChar(100)
  phoneNumber String? @unique @map("phone_number") @db.VarChar(10)
  authUid     String  @unique @map("auth_uid") @db.VarChar(100)
  fullName    String? @map("full_name") @db.VarChar(100)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  // relations
  businesses Business[]

  @@map("user")
}

model Parameter {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(100)
  value String

  @@map("parameter")
}

model Attachment {
  id      Int    @id @default(autoincrement())
  uid     String @unique @default(cuid())
  url     String @db.VarChar(250)
  cloudId String @map("cloud_id") @db.VarChar(50)
  type    String @db.VarChar(50)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  // relations
  categories CategoryAttachment[]
  references ReferenceAttachment[]

  @@map("attachment")
}

model Category {
  id       Int    @id @default(autoincrement())
  uid      String @unique @default(cuid())
  name     String @unique @db.VarChar(100)
  slug     String @db.VarChar(100)
  parentId Int?   @map("parent_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  // relations
  parent   Category?  @relation("CategoryChildren", fields: [parentId], references: [id])
  children Category[] @relation("CategoryChildren")

  categoryAttachments CategoryAttachment[]
  references          Reference[]

  @@map("category")
}

model CategoryAttachment {
  categoryId   Int      @map("category_id")
  attachmentId Int      @map("attachment_id")
  main         Boolean? @default(false)
  version      String?  @db.VarChar(50)

  createdAt DateTime @default(now()) @map("created_at")

  // relations
  category   Category   @relation(fields: [categoryId], references: [id])
  attachment Attachment @relation(fields: [attachmentId], references: [id])


  @@id([categoryId, attachmentId])
  @@map("category_attachment")
}

model Reference {
  id               Int     @id @default(autoincrement())
  uid              String  @unique @default(cuid())
  sku              String  @unique @db.VarChar(50)
  name             String  @db.VarChar(100)
  description      String? @db.VarChar(250)
  packaging        String? @db.VarChar(50)
  measurementUnit  String? @map("measurement_unit") @db.VarChar(50)
  measurementValue Float?  @map("measurement_value")
  categoryId       Int     @map("category_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  // relations
  category             Category              @relation(fields: [categoryId], references: [id])
  referenceAttachments ReferenceAttachment[]
  products             Product[]

  @@map("reference")
}

model ReferenceAttachment {
  referenceId  Int      @map("reference_id")
  attachmentId Int      @map("attachment_id")
  main         Boolean? @default(false)
  version      String?  @db.VarChar(50) // small, medium, large

  createdAt DateTime @default(now()) @map("created_at")

  // relations
  reference  Reference  @relation(fields: [referenceId], references: [id])
  attachment Attachment @relation(fields: [attachmentId], references: [id])


  @@id([referenceId, attachmentId])
  @@map("reference_attachment")
}

model Business {
  id          Int    @id @default(autoincrement())
  uid         String @unique @default(cuid())
  name        String @unique @db.VarChar(100)
  phoneNumber String @map("phone_number") @db.VarChar(10)
  address     String @db.VarChar(250)
  userId      Int    @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  // relations
  user User @relation(fields: [userId], references: [id])

  @@map("business")
}

model Product {
  id          Int      @id @default(autoincrement())
  uid         String   @unique @default(cuid())
  sellPrice   Decimal  @map("sell_price") @db.Decimal(15, 2)
  costPrice   Decimal  @map("cost_price") @db.Decimal(15, 2)
  salePrice   Decimal? @map("sale_price") @db.Decimal(15, 2)
  stock       Int
  referenceId Int      @map("reference_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  // relations
  reference Reference @relation(fields: [referenceId], references: [id])


  @@map("product")
}
